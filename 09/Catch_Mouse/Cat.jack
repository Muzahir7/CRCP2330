class Cat{
	// The cat's screen location (in pixels)
    field Square cat;
    field int dir;
    

    //constructs the cat
   constructor Cat new() {
      let cat = Square.new(200, 200, 40);
      let dir = 0;
      
      return this;
   }

   //dispose cat
   method void dispose() {
      do cat.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method void moveCat() {
      if (dir = 8) { do cat.moveUp(); }
      if (dir = 2) { do cat.moveDown(); }
      if (dir = 4) { do cat.moveLeft(); }
      if (dir = 6) { do cat.moveRight(); }
      do Sys.wait(50);  // delays the next movement
      return;
   }

   //dir getters and setters
   method int getDir(){
   		return dir;
   }
   method void setDir(int d){
   		let dir = d;
   		return;
   }

   

   //getters to get cat location
   method int getX(){
   		return cat.getXPos();
   }
   method int getY(){
   		return cat.getYPos();
   }
   method int getSize(){
         return cat.getSize();
   }

   //more fficient way of detecting collision using center of square
      method int getCenterX(){
         return cat.getCenterX();
      }
      method int getCenterY(){
         return cat.getCenterY();
      }




   //methods to be used in calculation of collisions of two squares
      method int rCorX(){ //right corner x pos.
         return cat.rCorX();
      }
      method int rCorY(){ //right corner y pos.
         return cat.rCorY();
      }

      method int bCorX(){ //bottom corner x pos.
         return cat.bCorX();
      }
      method int bCorY(){ //bottom corner x pos.
         return cat.bCorY();
      }

      method int dCorX(){ //diagonal corner x pos.
         return cat.dCorX();
      }
      method int dCorY(){ //diagonal corner y pos.
         return cat.dCorY();
      }

      method int tMidX(){ //top mid x
         return cat.tMidX();
      }
      method int tMidY(){ //top mid y
         return cat.tMidY();
      }

      method int lMidX(){ //left mid x
         return cat.lMidX();
      }
      method int lMidY(){ //left mid y
         return cat.lMidY();
      }

      method int rMidX(){ //right mid x
         return cat.rMidX();
      }
      method int rMidY(){ //right mid y
         return cat.rMidY();
      }

      method int bMidX(){ //bottom mid x
         return cat.bMidX();
      }
      method int bMidY(){ //bottom mid y
         return cat.bMidY();
      }
}