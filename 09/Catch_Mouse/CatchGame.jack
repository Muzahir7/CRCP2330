class CatchGame{
	field Mouse jerry;
	field Cat tom;
	field boolean exit;

	constructor CatchGame new() {
      let jerry = Mouse.new();
      let tom = Cat.new();
      let exit = false;
      return this;
   }

   method void dispose() {
      do jerry.dispose();
      do tom.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method void run() {
      var char key;
      //distance between the centers of the two squares
      var int distX; 
      var int distY;
      var int minDist;
      let minDist = (jerry.getSize()/2) + (tom.getSize()/2) + 1;

      while(~exit){
      	while (key = 0) {
            let key = Keyboard.keyPressed();
            do jerry.moveMouse();
            do tom.moveCat();
        }
         
        if (key = 32)  {  // space bar
        	
        	let distX = Math.abs(jerry.getCenterX() - tom.getCenterX());
        	let distY = Math.abs(jerry.getCenterY() - tom.getCenterY());

        	//condition to check collision
        	if ((distX < minDist) & (distY < minDist)){
        		do Output.printString("TOM WINS THE CHASE!!!!!");
        		let exit = true;
        	}

        }     
        if (key = 131) { do jerry.setDir(8);}   // up arrow
        if (key = 133) { do jerry.setDir(2);}   // down arrow
        if (key = 130) { do jerry.setDir(4); }   // left arrow
        if (key = 132) { do jerry.setDir(6); }   // right arrow

        if (key = 87) { do tom.setDir(8);}   // key W
        if (key = 83) { do tom.setDir(2);}   // key S
        if (key = 65) { do tom.setDir(4); }   // key A
        if (key = 68) { do tom.setDir(6); }   // key D

        while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do jerry.moveMouse();
            do tom.moveCat();

      	}
      }
      return;
   }

}