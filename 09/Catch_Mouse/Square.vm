function Square.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
call Square.show 1
pop temp 0
push pointer 0
return
function Square.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Square.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Square.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Square.moveRight 1
push argument 0
pop pointer 0
push constant 510
pop local 0
push this 0
push this 2
add
push local 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 2
add
pop this 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Square.moveLeft 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
push local 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 2
sub
pop this 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Square.moveUp 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 1
push local 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 2
sub
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Square.moveDown 1
push argument 0
pop pointer 0
push constant 254
pop local 0
push this 1
push this 2
add
push local 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 2
add
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Square.getXPos 0
push argument 0
pop pointer 0
push this 0
return
function Square.getYPos 0
push argument 0
pop pointer 0
push this 1
return
function Square.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Square.getCenterX 0
push argument 0
pop pointer 0
push this 0
push this 2
push constant 2
call Math.divide 2
add
return
function Square.getCenterY 0
push argument 0
pop pointer 0
push this 1
push this 2
push constant 2
call Math.divide 2
add
return
function Square.rCorX 0
push argument 0
pop pointer 0
push this 0
push this 2
add
return
function Square.rCorY 0
push argument 0
pop pointer 0
push this 1
return
function Square.bCorX 0
push argument 0
pop pointer 0
push this 0
return
function Square.bCorY 0
push argument 0
pop pointer 0
push this 1
push this 2
add
return
function Square.dCorX 0
push argument 0
pop pointer 0
push this 0
push this 2
add
return
function Square.dCorY 0
push argument 0
pop pointer 0
push this 1
push this 2
add
return
function Square.tMidX 0
push argument 0
pop pointer 0
push this 0
push this 2
push constant 2
call Math.divide 2
add
return
function Square.tMidY 0
push argument 0
pop pointer 0
push this 1
return
function Square.lMidX 0
push argument 0
pop pointer 0
push this 0
return
function Square.lMidY 0
push argument 0
pop pointer 0
push this 1
push this 2
push constant 2
call Math.divide 2
add
return
function Square.rMidX 0
push argument 0
pop pointer 0
push this 0
push this 2
add
return
function Square.rMidY 0
push argument 0
pop pointer 0
push this 1
push this 2
push constant 2
call Math.divide 2
add
return
function Square.bMidX 0
push argument 0
pop pointer 0
push this 0
push this 2
push constant 2
call Math.divide 2
add
return
function Square.bMidY 0
push argument 0
pop pointer 0
push this 1
push this 2
add
return
